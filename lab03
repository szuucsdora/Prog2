# # 1. feladat
# import math
#
# class Triangle:
#     def __init__(self,a,b,c):
#         self.a=a
#         self.b=b
#         self.c=c
#
#     # összeadás : adjuk össze az oldalait
#     # egyenglőség : minden oldala megegyezik
#     # kivonás, ha negatív akkor lyan 3szög jöjjön létre ,h minden oldala 0
#
#     def __add__(self, other):
#         uj_h= Triangle(self.a+other.a , self.b+other.b , self.c+other.c)
#         return uj_h
#
#     def __sub__(self, other):
#         a =self.a - other.a
#         b=self.b - other.b
#         c=self.c - other.c
#
#         if (a or b or c) <= 0:
#             return Triangle(0,0,0)
#         else:
#             return Triangle(a,b,c)
#
#     def __eq__(self, other):
#         if self.a==other.a and self.b==other.b  and self.c == other.c:
#             return True
#         return False
#
#     def __gt__(self, other):
#         if self. > other.a and self.b > other.b and self.c > other.c:
#             return True
#         else:
#             return False
#
#     def kerulet(self):
#         return self.a+self.b+self.c
#
#     def terulet(self):
#         return (self.a*self.b*math.sin(self.c))/2
#
# h1=Triangle(5,5,5)
# h2=Triangle(2,3,6)
# print(h1.kerulet())
# print(h1.terulet())

#2. feladat
# összeadás, kivonás, szorzás
# class Vector:
#
#     def __init__(self,x,y):
#         self.x=x
#         self.y=y
#
#
#     def vektor_hossza(self):
#         h=((abs(self.x)**2)*(abs(self.y)**2))**0,5
#         return h
#
#
#     def __add__(self, other):
#         uj_v=Vector(self.x + other.x, self.y + other.y)
#         return uj_v
#
#
#     def __sub__(self, other):
#         uj_v = Vector(self.x - other.x, self.y - other.y)
#         return uj_v
#
#
#     def __eq__(self, other):
#         if (self.x == other.x and self.y == other.y) or ((((abs(self.x)**2)*(abs(self.y)**2))**0,5) == (((abs(other.x)**2)*(abs(other.y)**2))**0,5))
#             return True
#         return False
#
#
#
# v1=Vector(1,1)
# v2=Vector(3,5)
# v3=Vector(1,1)
#
# print(v1.vektor_hossza())


#4. feladat
# tört osztály, két adattag, számláló, nevező
# kivonás, összeadás

class Tort:
    def __init__(self,sz,n):
        self.szamlalo=sz
        self.nevezo=n

    
